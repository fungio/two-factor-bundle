<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="fungio_two_factor.sdk.api_factory.class">Fungio\TwoFactorBundle\DependencyInjection\Factory\ApiSdkFactory</parameter>
        <parameter key="fungio_two_factor.sdk.account_factory.class">Fungio\TwoFactorBundle\DependencyInjection\Factory\AccountSdkFactory</parameter>
        <parameter key="fungio_two_factor.sdk.api.class">TwoFAS\Api\TwoFAS</parameter>
        <parameter key="fungio_two_factor.sdk.account.class">TwoFAS\Account\TwoFAS</parameter>
        <parameter key="fungio_two_factor.proxy.api_provider.class">Fungio\TwoFactorBundle\Proxy\ApiProvider</parameter>
        <parameter key="fungio_two_factor.storage.encryption_storage.class">Fungio\TwoFactorBundle\Storage\EncryptionStorage</parameter>
        <parameter key="fungio_two_factor.encryption.cryptographer.class">TwoFAS\Encryption\Cryptographer</parameter>
        <parameter key="fungio_two_factor.storage.token_storage.class">Fungio\TwoFactorBundle\Storage\TokenStorage</parameter>
        <parameter key="fungio_two_factor.storage.oauth_token_storage.class">Fungio\TwoFactorBundle\Storage\OAuthTokenStorage</parameter>
        <parameter key="fungio_two_factor.account.oauth.token_type_symfony.class">TwoFAS\Account\OAuth\TokenType</parameter>
        <parameter key="fungio_two_factor.qr_code.endroid_qr_client.class">TwoFAS\Api\QrCode\EndroidQrClient</parameter>
        <parameter key="fungio_two_factor.qr_code.generator.class">TwoFAS\Api\QrCodeGenerator</parameter>
        <parameter key="fungio_two_factor.util.totp_qr_code_generator.class">Fungio\TwoFactorBundle\Util\TotpQrCodeGenerator</parameter>
        <parameter key="fungio_two_factor.util.user_manager.class">Fungio\TwoFactorBundle\Util\UserManager</parameter>
        <parameter key="fungio_two_factor.util.integration_user_manager.class">Fungio\TwoFactorBundle\Util\IntegrationUserManager</parameter>
        <parameter key="fungio_two_factor.util.authentication_manager.class">Fungio\TwoFactorBundle\Util\AuthenticationManager</parameter>
        <parameter key="fungio_two_factor.util.configuration_checker.class">Fungio\TwoFactorBundle\Util\ConfigurationChecker</parameter>
        <parameter key="fungio_two_factor.storage.user_session_storage.class">Fungio\TwoFactorBundle\Storage\UserSessionStorage</parameter>
        <parameter key="fungio_two_factor.storage.file_cache_storage.class">Fungio\TwoFactorBundle\Cache\FileCacheStorage</parameter>
        <parameter key="fungio_two_factor.browser.parser.class">Fungio\TwoFactorBundle\Util\BrowserParser</parameter>
        <parameter key="fungio_two_factor.twig.fungio_extension.class">Fungio\TwoFactorBundle\Twig\FungioExtension</parameter>
    </parameters>
    <services>
        <!-- SDK -->
        <service id="fungio_two_factor.sdk.api_factory" class="%fungio_two_factor.sdk.api_factory.class%" lazy="true">
            <argument id="fungio_two_factor.option_persister" type="service"/>
            <argument id="fungio_two_factor.encryption.cryptographer" type="service"/>
            <argument id="request_stack" type="service"/>
            <argument id="fungio_two_factor.cache.storage" type="service"/>
            <argument>%fungio_two_factor.account_name%</argument>
            <argument>%fungio_two_factor.api_url%</argument>
        </service>

        <service id="fungio_two_factor.sdk.account_factory" class="%fungio_two_factor.sdk.account_factory.class%" lazy="true">
            <argument id="fungio_two_factor.storage.oauth_token_storage" type="service"/>
            <argument id="fungio_two_factor.account.oauth.token_type_symfony" type="service"/>
            <argument id="request_stack" type="service"/>
            <argument>%fungio_two_factor.account_name%</argument>
            <argument>%fungio_two_factor.account_url%</argument>
        </service>

        <service id="fungio_two_factor.sdk.api" class="%fungio_two_factor.sdk.api.class%" lazy="true">
            <factory service="fungio_two_factor.sdk.api_factory" method="createInstance"/>
        </service>

        <service id="fungio_two_factor.sdk.account" class="%fungio_two_factor.sdk.account.class%" lazy="true">
            <factory service="fungio_two_factor.sdk.account_factory" method="createInstance"/>
        </service>

        <!-- Api Provider -->
        <service id="fungio_two_factor.proxy.api_provider" class="%fungio_two_factor.proxy.api_provider.class%" lazy="true">
            <argument id="fungio_two_factor.sdk.api" type="service"/>
            <argument id="fungio_two_factor.authentication_persister" type="service"/>
            <argument id="fungio_two_factor.storage.encryption_storage" type="service"/>
        </service>

        <!-- Encryption Storage -->
        <service id="fungio_two_factor.storage.encryption_storage" class="%fungio_two_factor.storage.encryption_storage.class%" lazy="true">
            <argument>%fungio_two_factor.encryption_key%</argument>
        </service>

        <service id="fungio_two_factor.encryption.cryptographer" class="%fungio_two_factor.encryption.cryptographer.class%" lazy="true">
            <factory class="%fungio_two_factor.encryption.cryptographer.class%" method="getInstance"/>
            <argument type="service" id="fungio_two_factor.storage.encryption_storage"/>
        </service>

        <!-- Token Storage -->
        <service id="fungio_two_factor.storage.token_storage" class="%fungio_two_factor.storage.token_storage.class%" lazy="true">
            <argument id="security.token_storage" type="service"/>
        </service>

        <service id="fungio_two_factor.storage.oauth_token_storage" class="%fungio_two_factor.storage.oauth_token_storage.class%" lazy="true">
            <argument id="fungio_two_factor.option_persister" type="service"/>
            <argument id="fungio_two_factor.encryption.cryptographer" type="service"/>
        </service>

        <service id="fungio_two_factor.account.oauth.token_type_symfony" class="%fungio_two_factor.account.oauth.token_type_symfony.class%" lazy="true">
            <factory class="%fungio_two_factor.account.oauth.token_type_symfony.class%" method="symfony"/>
        </service>

        <!-- QrCode Generator-->
        <service id="fungio_two_factor.qr_code.endroid_qr_client" class="%fungio_two_factor.qr_code.endroid_qr_client.class%" public="false" lazy="true"/>
        <service id="fungio_two_factor.qr_code.generator" class="%fungio_two_factor.qr_code.generator.class%">
            <argument id="fungio_two_factor.qr_code.endroid_qr_client" type="service"/>
        </service>
        <service id="fungio_two_factor.util.totp_qr_code_generator" class="%fungio_two_factor.util.totp_qr_code_generator.class%" lazy="true" public="true">
            <argument id="fungio_two_factor.qr_code.generator" type="service"/>
        </service>

        <!-- Managers -->
        <service id="fungio_two_factor.util.user_manager" class="%fungio_two_factor.util.user_manager.class%" lazy="true">
            <argument id="fungio_two_factor.user_persister" type="service"/>
        </service>
        <service id="fungio_two_factor.util.integration_user_manager" class="%fungio_two_factor.util.integration_user_manager.class%" lazy="true">
            <argument id="fungio_two_factor.proxy.api_provider" type="service"/>
        </service>
        <service id="fungio_two_factor.util.authentication_manager" class="%fungio_two_factor.util.authentication_manager.class%" lazy="true" public="true">
            <argument id="fungio_two_factor.proxy.api_provider" type="service"/>
            <argument id="fungio_two_factor.authentication_persister" type="service"/>
            <argument id="fungio_two_factor.object_manager" type="service"/>
            <argument id="event_dispatcher" type="service"/>
            <argument>%fungio_two_factor.block_user_login_in_minutes%</argument>
        </service>

        <!-- Configuration Checker -->
        <service id="fungio_two_factor.util.configuration_checker" class="%fungio_two_factor.util.configuration_checker.class%" lazy="true">
            <argument id="fungio_two_factor.option_persister" type="service"/>
            <argument id="fungio_two_factor.storage.user_session_storage" type="service"/>
            <argument id="fungio_two_factor.cache.storage" type="service"/>
        </service>

        <!-- User storage -->
        <service id="fungio_two_factor.storage.user_session_storage" class="%fungio_two_factor.storage.user_session_storage.class%" public="true">
            <argument id="session" type="service"/>
            <argument id="fungio_two_factor.storage.token_storage" type="service"/>
            <argument id="fungio_two_factor.object_manager" type="service"/>
            <argument id="fungio_two_factor.util.user_manager" type="service"/>
            <argument id="fungio_two_factor.util.integration_user_manager" type="service"/>
        </service>

        <!-- Cache Storage -->
        <service id="fungio_two_factor.storage.file_cache_storage" class="%fungio_two_factor.storage.file_cache_storage.class%" lazy="true">
            <argument id="filesystem" type="service"/>
            <argument>%kernel.cache_dir%</argument>
        </service>

        <!-- Browser Parser -->
        <service id="fungio_two_factor.browser.parser" class="%fungio_two_factor.browser.parser.class%" lazy="true"/>

        <!-- Twig Extension -->
        <service id="fungio_two_factor.twig.fungio_extension" class="%fungio_two_factor.twig.fungio_extension.class%">
            <argument id="fungio_two_factor.util.configuration_checker" type="service"/>
            <argument id="security.authorization_checker" type="service"/>
            <argument>%kernel.root_dir%</argument>
            <tag name="twig.extension"/>
        </service>

    </services>
</container>
