<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="fungio_two_factor.event_listener.command_exception.class">Fungio\TwoFactorBundle\EventListener\ConsoleExceptionListener</parameter>
        <parameter key="fungio_two_factor.event_listener.fungio_controller.class">Fungio\TwoFactorBundle\EventListener\FungioControllerListener</parameter>
        <parameter key="fungio_two_factor.event_listener.api_exception.class">Fungio\TwoFactorBundle\EventListener\ApiExceptionListener</parameter>
        <parameter key="fungio_two_factor.event_listener.authentication.class">Fungio\TwoFactorBundle\EventListener\AuthenticationSubscriber</parameter>
        <parameter key="fungio_two_factor.event_listener.flash.class">Fungio\TwoFactorBundle\EventListener\FlashSubscriber</parameter>
        <parameter key="fungio_two_factor.event_listener.logger.class">Fungio\TwoFactorBundle\EventListener\AuthenticationLoggerSubscriber</parameter>
        <parameter key="fungio_two_factor.event_listener.second_factor.class">Fungio\TwoFactorBundle\EventListener\SecondFactorListener</parameter>
        <parameter key="fungio_two_factor.event_listener.trusted_device.class">Fungio\TwoFactorBundle\EventListener\TrustedDeviceListener</parameter>
        <parameter key="fungio_two_factor.event_listener.token.class">Fungio\TwoFactorBundle\EventListener\TokenListener</parameter>
        <parameter key="fungio_two_factor.event_listener.browser.class">Fungio\TwoFactorBundle\EventListener\BrowserListener</parameter>
        <parameter key="fungio_two_factor.event_listener.channel_listener.class">Fungio\TwoFactorBundle\EventListener\ChannelListener</parameter>
    </parameters>
    <services>
        <service id="fungio_two_factor.event_listener.command_exception" class="%fungio_two_factor.event_listener.command_exception.class%" lazy="true">
            <argument id="logger" type="service" on-invalid="null"/>
            <tag name="kernel.event_listener" event="console.exception"/>
        </service>
        <service id="fungio_two_factor.event_listener.fungio_controller" class="%fungio_two_factor.event_listener.fungio_controller.class%" lazy="true">
            <argument id="fungio_two_factor.storage.token_storage" type="service"/>
            <argument id="fungio_two_factor.util.configuration_checker" type="service"/>
            <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
        </service>

        <service id="fungio_two_factor.event_listener.api_exception" class="%fungio_two_factor.event_listener.api_exception.class%" lazy="true">
            <argument id="session" type="service"/>
            <argument id="translator" type="service"/>
            <tag name="kernel.event_listener" event="kernel.exception"/>
        </service>

        <service id="fungio_two_factor.event_listener.authentication" class="%fungio_two_factor.event_listener.authentication.class%" lazy="true">
            <argument id="fungio_two_factor.util.authentication_manager" type="service"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="fungio_two_factor.event_listener.flash" class="%fungio_two_factor.event_listener.flash.class%" lazy="true">
            <argument id="session" type="service"/>
            <argument id="translator" type="service"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="fungio_two_factor.event_listener.logger" class="%fungio_two_factor.event_listener.logger.class%" lazy="true">
            <argument id="fungio_two_factor.storage.token_storage" type="service"/>
            <argument id="logger" type="service" on-invalid="null"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="fungio_two_factor.event_listener.second_factor" class="%fungio_two_factor.event_listener.second_factor.class%" lazy="true">
            <argument id="fungio_two_factor.storage.token_storage" type="service"/>
            <argument id="security.authorization_checker" type="service"/>
            <argument id="fungio_two_factor.authentication.manager" type="service"/>
            <argument id="fungio_two_factor.dependency_injection_factory.persistent_remember_me_services_factory" type="service"/>
            <argument id="router" type="service"/>
            <argument id="session" type="service"/>
            <argument id="fungio_two_factor.util.configuration_checker" type="service"/>
            <argument>%fungio_two_factor.firewalls%</argument>
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
        </service>

        <service id="fungio_two_factor.event_listener.trusted_device" class="%fungio_two_factor.event_listener.trusted_device.class%" lazy="true">
            <argument id="fungio_two_factor.storage.user_session_storage" type="service"/>
            <argument id="fungio_two_factor.object_manager" type="service"/>
            <argument id="fungio_two_factor.remember_me_persister" type="service"/>
            <tag name="kernel.event_listener" event="fungio_two_factor.integration_user.configuration.complete.totp" method="onTotpSecretChanged"/>
        </service>

        <service id="fungio_two_factor.event_listener.token" class="%fungio_two_factor.event_listener.token.class%" lazy="true">
            <argument id="fungio_two_factor.storage.token_storage" type="service"/>
            <tag name="kernel.event_listener" event="fungio_two_factor.code.accepted" method="onAuthenticationSuccess"/>
        </service>

        <service id="fungio_two_factor.event_listener.browser" class="%fungio_two_factor.event_listener.browser.class%" lazy="true">
            <argument id="fungio_two_factor.browser.parser" type="service"/>
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="128"/>
        </service>

        <service id="fungio_two_factor.event_listener.channel_listener" class="%fungio_two_factor.event_listener.channel_listener.class%">
            <argument id="fungio_two_factor.storage.token_storage" type="service"/>
            <tag name="kernel.event_listener" event="fungio_two_factor.channel.enabled" method="onChannelEnabled"/>
        </service>

    </services>
</container>
